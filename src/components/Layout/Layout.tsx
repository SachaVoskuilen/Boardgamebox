import { Box, Grid } from '@/styles';
import Head from 'next/head';
import { FC, useEffect, useRef, useState } from 'react';
import { StyledLayout, windowSize } from '.';

type Props = {
  title?: string;
  children: JSX.Element | JSX.Element[];
  loading: boolean;
};

export const Layout: FC<Props> = ({ title, children, loading }) => {
  let [menu, setMenu] = useState<string>('default');

  const [windowSize, setWindowSize] = useState<windowSize>({ height: 100, width: 100 });

  useEffect(() => {
    // On mount
    setWindowSize({ height: window.innerWidth, width: window.innerHeight });
    console.log('Even loggen');

    // Watch
    const handleWindowResize = () => {
      setWindowSize({ height: window.innerWidth, width: window.innerHeight });
    };
    window.addEventListener('resize', handleWindowResize);
    return () => {
      window.removeEventListener('resize', handleWindowResize);
    };
  }, []);

  return (
    <>
      <Head>
        <title>{title}</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
        <link rel="preconnect" href="https://fonts.googleapis.com" />
        <link rel="preconnect" href="https://fonts.gstatic.com" crossOrigin="" />
        <link
          rel="stylesheet"
          href="https://fonts.googleapis.com/css2?family=Nunito:wght@400;500;600;700;800&display=swap"
        />
      </Head>
      <main>
        <StyledLayout windowSize={windowSize} variant={menu}>
          <Navigation gridArea={'navigation'} />
          <div>b</div>
          <div>c</div>
          <div>d</div>
          {/* <Grid gridArea={'navigation'} backgroundColor={'yellow'}>
            Navigation
          </Grid>
          {menu != 'default' && (
            <Grid gridArea={'hamburger'} backgroundColor={'lightblue'}>
              <button onClick={() => (menu == 'default' ? setMenu('hamburger') : setMenu('default'))}>change</button>
              <div>hamburger</div>
              <div>Content</div>
            </Grid>
          )}
          <Grid gridArea={'content'}>
            <button onClick={() => (menu == 'default' ? setMenu('hamburger') : setMenu('default'))}>change</button>
            <div>{children}</div>
            <div>{children}</div>
          </Grid> */}
        </StyledLayout>
      </main>
    </>
  );
};
