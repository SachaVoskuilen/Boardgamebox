import { Grid, defaultBreakingPoints } from '@/styles';
import Head from 'next/head';
import { FC, useEffect, useState } from 'react';
import { Content, StyledLayout, StyledMain, windowSizeType } from '.';
import { Navigation } from '../Navigation';
import { GridContentBlockStyle } from './GridContentBlock.style';

type Props = {
  title?: string;
  children: JSX.Element | JSX.Element[];
  loading: boolean;
};

export const Layout: FC<Props> = ({ title, children, loading }) => {
  const [menu, setMenu] = useState<string>('default');

  const [windowSize, setWindowSize] = useState<windowSizeType>({ height: 100, width: 100 });

  useEffect(() => {
    // On mount
    setWindowSize({ height: window.innerHeight, width: window.innerWidth });

    // Watch
    const handleWindowResize = () => {
      setWindowSize({ height: window.innerHeight, width: window.innerWidth });
    };
    window.addEventListener('resize', handleWindowResize);
    return () => {
      window.removeEventListener('resize', handleWindowResize);
    };
  }, []);

  return (
    <>
      <Head>
        <title>{title}</title>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
        <link rel="preconnect" href="https://fonts.googleapis.com" />
        <link rel="preconnect" href="https://fonts.gstatic.com" crossOrigin="" />
        <link
          rel="stylesheet"
          href="https://fonts.googleapis.com/css2?family=Nunito:wght@400;500;600;700;800&display=swap"
        />
      </Head>
      <StyledMain windowSize={windowSize}>
        {windowSize.width >= defaultBreakingPoints.laptop ? (
          <StyledLayout variant={menu}>
            <Grid gridArea={'navigation'}>
              <Navigation menu={menu} setMenu={setMenu} />
            </Grid>
            {menu != 'default' && (
              <Grid gridArea={'hamburger'} backgroundColor={'lightblue'}>
                <div>hamburger</div>
                <div>Content</div>
              </Grid>
            )}
            <GridContentBlockStyle>
              <Content>
                <div>computer</div>
                <div>{children}</div>
                <div style={{ height: '1000px' }}>iets</div>
              </Content>
            </GridContentBlockStyle>
          </StyledLayout>
        ) : (
          <StyledLayout variant={menu}>
            <Grid gridArea={'navigation'}>
              <Navigation menu={menu} setMenu={setMenu} />
            </Grid>
            {menu != 'default' ? (
              <Grid gridArea={'hamburger'} backgroundColor={'lightblue'}>
                <div>hamburger</div>
                <div>Content</div>
              </Grid>
            ) : (
              <GridContentBlockStyle>
                <Content>
                  <div>computer</div>
                  <div>{children}</div>
                  <div style={{ height: '1000px' }}>iets</div>
                </Content>
              </GridContentBlockStyle>
            )}
          </StyledLayout>
        )}
      </StyledMain>
    </>
  );
};
