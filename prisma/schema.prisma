// Prisma schema file

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["jsonProtocol"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model BoardGame {
  id            Int         @id @default(autoincrement())
  name          String      @unique
  minPlayers    Int?
  maxPlayers    Int?
  recPlayers    Int?
  minPlaytime   Int?
  maxPlaytime   Int?
  avgPlaytime   Int?
  minAge        Int?
  maxAge        Int?
  ratings       Rating[]
}

model RatingCategory {
  id                Int         @id @default(autoincrement())
  ratingCategory    String
  ratings           Rating[]
}

model Rating {
  id                Int               @id @default(autoincrement())
  user              User              @relation(fields: [userId], references: [id])
  userId            String
  boardGame         BoardGame         @relation(fields: [boardGameId], references: [id])
  boardGameId       Int
  ratingCategory    RatingCategory    @relation(fields: [ratingCategoryId], references: [id])
  ratingCategoryId  Int
  rating            Float
}

// Necessary for Next auth
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  ratings       Rating[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
